name: Run Movie Bot Randomly (1‚Äì2hr gaps, all day)

on:
  schedule:
    - cron: '*/15 * * * *'  # Runs every 15 minutes (max GitHub allows)

jobs:
  ping-movie-bot:
    runs-on: ubuntu-latest

    steps:
      - name: üß† Simulate 1‚Äì2hr Gaps with Random Chance
        run: |
          set -euo pipefail

          echo "üïí Current Time: $(date)"
          echo "üé∞ Simulating random execution (approx 1 in 4 chance)..."

          # 75% chance to skip this run
          CHANCE=$(( RANDOM % 4 ))
          if [ "$CHANCE" -ne 0 ]; then
            echo "üé≤ Skipping this run (CHANCE=$CHANCE). Will retry in 15 mins."
            exit 0
          fi

          # Random delay: 15 to 45 minutes (900 to 2700 seconds)
          DELAY=$(( 900 + RANDOM % 1800 ))
          echo "‚è± Sleeping for $DELAY seconds (~$((DELAY / 60)) minutes)..."
          sleep "$DELAY"

          echo "üöÄ Hitting the movie bot API..."
          
          MAX_RETRIES=3
          for i in $(seq 1 $MAX_RETRIES); do
            echo "üì° Attempt $i..."
            RESPONSE=$(curl -s -w "\nStatus: %{http_code}" "https://movie-x.rithb8981.workers.dev/run-bot")

            echo "üì¶ Full Response:"
            echo "$RESPONSE"

            STATUS_CODE=$(echo "$RESPONSE" | grep "Status:" | awk '{print $2}')

            if [ "$STATUS_CODE" -eq 200 ]; then
              echo "‚úÖ API call succeeded with status $STATUS_CODE on attempt $i"
              break
            else
              echo "‚ùå API call failed with status $STATUS_CODE on attempt $i"
              if [ "$i" -lt "$MAX_RETRIES" ]; then
                BACKOFF=$(( i * 10 ))
                echo "üîÅ Retrying in $BACKOFF seconds..."
                sleep "$BACKOFF"
              else
                echo "üí• Failed after $MAX_RETRIES attempts."
                exit 1
              fi
            fi
          done
